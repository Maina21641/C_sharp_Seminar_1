// Напишите программу, которая на вход принимает число 
// и выдает его квадрат (число умноженное на само себя).
// Например: 4 -> 16, 3 -> 9, 7 -> 49.

Console.WriteLine("Введите число: "); // Команда для взаимодействия с пользователем.

int number = int.Parse(Console.ReadLine()); // Console.ReadLine возвращает строку, мы не можем положить ее в переменную типа int

// Parse(String). Преобразует строковое представление числа в эквивалентное ему 32-битовое целое число со знаком. Parse(ReadOnlySpan<Char>, IFormatProvider). Анализирует диапазон символов в значение. ... Это должно быть сочетание битовых флагов из NumberStyles перечисления. В зависимости от значения style``s параметр может включать следующие элементы ... Эта перегрузка Parse(String, IFormatProvider) метода обычно используется для преобразования текста, который можно отформатировать различными способами в Int32 значение. Например, его можно использовать для преобразования текста, введенного пользователем, в текстовое поле HTML в числовое значение. 

int sq = number * number; 

// Для возведения в другую степень кроме 2-ки, нужно обращаться к объекту Math и его параметру Pow
// Convert.ToInt32 преобразует в int значение любого типа, из перечисленных здесь. boolean, double, float и т.д. А самое главное, может преобразовать экземпляр любого класса, реализующего IConvertible. 

int pow = Convert.ToInt32(Math.Pow(number, 2));

//System.Console.WriteLine("Квадрат числа равен: " + sq);
System.Console.WriteLine($"Квадрат числа равен: {sq}");
//System.Console.WriteLine("Квадрат числа равен: " + pow);
System.Console.WriteLine($"Квадрат числа равен: {pow}");

// Знак доллара перед строкой указывает, что будет осуществляться интерполяция строк. Внутри строки опять же используются плейсхолдеры {...}, только внутри фигурных скобок уже можно напрямую писать те выражения, которые мы хотим вывести.
// Интерполяция по сути представляет более лаконичное форматирование. При этом внутри фигурных скобок мы можем указывать не только свойства, но и различные выражения языка C#
// Подробнее и Форматировании и интерполяции строк можно прочитать здесь https://metanit.com/sharp/tutorial/7.5.php